---
// TableOfContents.astro
const { headings } = Astro.props;
const toc = buildToc(headings);
import TableOfContentsHeading from "./TableOfContentsHeading.astro";

interface Heading {
  depth: number;
  title: string;
  subheadings: Heading[];
}

function buildToc(headings: Array<{ depth: number; title: string }>): Heading[] {
  const toc: Heading[] = [];
  const parentHeadings = new Map<number, Heading>();

  headings.forEach((h) => {
    const heading: Heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);

    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 2) {
      toc.push(heading);
    } else {
      const parentHeading = parentHeadings.get(heading.depth - 1);
      if (parentHeading) {
        parentHeading.subheadings.push(heading);
      } else {
        console.warn(`No parent found for heading at depth ${heading.depth}`);
      }
    }
  });

  return toc;
}
---

<nav class="toc">
  <ul>
    {toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
  </ul>
</nav>